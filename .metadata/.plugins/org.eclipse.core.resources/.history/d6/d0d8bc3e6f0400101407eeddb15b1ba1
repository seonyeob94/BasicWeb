<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="stylesheet" href="../css/public.css">
<script type="text/javascript">
/* 
const rect ={ 
		garo : 10,
		sero : 9,
		
		getAtea : function(){
			return this.garo *this.sero;
		}
};
//출력
rect.garo / rect['garo']
rect.sero / rect['sero']
rect.getArea() / rect['getArea']() 
*/

//빈객체 선언. 필요시 동적으로 속성이나 메소드를 추가사용 가능
const rect ={ }

const proc1 = () =>{
	rect.garo =10;
	rect.sero =9;
	
	rect.getArea =function(){
		return this.garo *this.sero;
	}
	
	printRect('result1')
}

const printRect = out =>{
	/* 
	// 출력내용
	str = `가로 : ${rect.garo} <br>`;
	str += `세로 : ${rect.sero}<br>`;
	str += `면적 : ${rect.getArea()}<br>`; */
	
	let str = "";
	//value가 함수일때 함수 내용이 그대로 출력된다
	//함수내의 처리 결과값이 필요
	/* for(const [key, value] of Object.entries(rect)){
		str += `${key} : ${value} <br>`
	} */
	
	for(const [key, value] of Object.entries(rect)){
		//value가 함수가 아닐때는 key, value를 출력하고 
		//함수(function->Function객체)일 때는 호출해야 한다.
		if( !(value instanceof Function)){
			str += `${key} : ${value}<br>`
		}else{
			str += `${key} : ${rect[key]()}`
		}
	}
	
	document.getElementById(out).innerHTML = str;
}
</script>

</head>
<body>


<div class="box">
  <h3>구구단 입력 - 출력하기</h3>
  
  <input type="button" value="확인" onclick="proc1()">
  <br><br>
  <div id="result1"></div>
</div>

</body>
</html>